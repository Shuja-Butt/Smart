{"version":3,"sources":["Navigation.js","Logo.js","ImageInsert.js","Rank.js","Register.js","Signin.js","ImageLinkForm.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onLC","style","display","justifyContent","marginRight","fontSize","onClick","Logo","className","options","max","height","width","backgroundColor","marginLeft","alt","src","ImageInsert","onInputChange","onButtonClick","color","type","placeholder","onChange","Rank","props","user","name","rank","Register","onName","event","setState","target","value","onEmail","email","onPass","pass","Request","a","fetch","method","headers","body","JSON","stringify","state","res","status","json","console","log","setUser","entries","id","onLocationChange","htmlFor","this","React","Component","Signin","onEmailChange","onPasswordChange","validateInfo","onRegisterClick","href","ImageLinkForm","im","boxy","bottom","bottomRow","top","topRow","left","leftCol","right","rightCol","party","particles","line_linked","shadow","enable","blur","App","requiredPage","b","input","image","box","location","then","response","description","data","getBox","catch","Err","values","outputs","regions","region_info","bounding_box","imageData","document","getElementById","Number","left_col","top_row","right_col","bottom_row","params","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2b3de913.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css';\r\nimport 'tachyons';\r\n\r\nconst Navigation=({onLC})=>\r\n{\r\nreturn(\r\n    \r\n    <nav style={{display:'flex',justifyContent : 'flex-end',marginRight :'1rem',fontSize :'1em'}}>\r\n    <p  onClick={()=>onLC(\"Signin\",false)} >Sign Out</p>\r\n    </nav>\r\n   \r\n\t);\r\n}\r\nexport default Navigation;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt'\r\nimport './Logo.css';\r\nconst Logo=()=>\r\n{\r\n\r\n  return(\r\n\r\n\r\n \r\n      <Tilt className=\"Tilt\" options={{ max : 25 }} style={{ height: 150, width: 150,backgroundColor:'green',marginLeft :'3em'}} >\r\n      <div className=\"Tilt-inner\"> <img alt='Nothing' src='./logo.png'/> </div>{/* /imagename means in thesrc folder*/}\r\n      </Tilt>\r\n\r\n\r\n\r\n  \t);\r\n\r\n\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './InsertImage.css';\r\n\r\nconst ImageInsert=({onInputChange,onButtonClick})=>\r\n{\r\n\r\nreturn(\r\n\t<div className=\"gp\">\r\n\t<div className='pa'>\r\n     <div className='ig'>\r\n    <p style={{color:'lightblue'}}>{'This magic brain will detect faces in your image .Give it a try'}</p>\r\n      <input className='in' type='text' placeholder='Enter image adress'  onChange={onInputChange}  />     \r\n       <button className='bt' onClick={onButtonClick}>Detect</button>\r\n     </div>\r\n     </div>\r\n     </div>\r\n\t);\r\n\r\n}\r\n\r\nexport default ImageInsert;","import React from 'react';\r\nimport './App.js';\r\nconst Rank=(props)=>\r\n{\r\n   //console.log(props.user)\r\n\treturn(\r\n         <div className='center'>\r\n       <p style={{color :'white',fontSize :'4vw'}}>{`${props.user.name}, your rank is....`}\r\n       <br/>{props.user.rank} </p>\r\n         </div>\r\n\t\t);\r\n\r\n}\r\nexport default Rank;","\r\nimport React from 'react';\r\nimport 'tachyons';\r\n\r\nclass Register extends React.Component\r\n{\r\n\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n   this.state={\r\n      name:'',\r\n      pass:'',\r\n      email:''\r\n    }\r\n  }\r\n\r\n  onName=(event)=>\r\n  {\r\n\r\n   this.setState({name:event.target.value});\r\n\r\n\r\n  }\r\n  onEmail=(event)=>\r\n  {\r\n this.setState({email:event.target.value});\r\n\r\n\r\n\r\n  }\r\n  onPass=(event)=>\r\n  {\r\n this.setState({pass:event.target.value});\r\n\r\n  }\r\n\r\n\r\nRequest= async()=>\r\n{\r\n  try{\r\n let res=await fetch('https://floating-ravine-14006.herokuapp.com/register', {\r\n  method: 'post', // or 'PUT'\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify({\r\n  email:this.state.email,\r\n  name:this.state.name,\r\n  pass:this.state.pass\r\n  })\r\n})\r\n if(res.status===200)\r\n {\r\n res=await res.json()\r\n   console.log(res);\r\n   this.props.setUser(res[0].name,res[0].entries,res[0].id);\r\n  this.props.onLocationChange(\"home\",true);\r\n}\r\n}\r\ncatch(Err)\r\n{\r\n  console.log(Err);\r\n}\r\n\r\n //.then(console.log).catch(err=>console.log(err));\r\n}\r\n  render()\r\n  {\r\n  return(\r\n     <main className=\"pa4 black-80 \">\r\n  <div className=\"measure center\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0 \">\r\n      <legend className=\"f4 fw6 ph0 mh0 center\">Register</legend>\r\n\r\n    <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n        <input  onChange={this.onName} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"Name\"/>\r\n      </div>\r\n\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email\">Email</label>\r\n        <input    onChange={this.onEmail} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email\"  id=\"email\"/>\r\n      </div>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input  onChange={this.onPass} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n      </div>\r\n      <br/>\r\n      <div  >\r\n   <div className=\"center\">\r\n      <input  onClick={this.Request}   className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"/>\r\n    </div>\r\n  \r\n    </div>\r\n    </fieldset>\r\n    \r\n  </div>\r\n</main>\r\n\r\n\r\n  \t);\r\n\r\n\r\n}\r\n}\r\nexport default Register;\r\n\r\n","\r\nimport React from 'react';\r\nimport 'tachyons';\r\n\r\nclass Signin extends React.Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state={\r\n         pass:'',\r\n         email:'',\r\n    }\r\n  }\r\n\r\n\r\n   onEmailChange=(event)=>\r\n   {\r\n     this.setState({email:event.target.value});\r\n    // console.log(event.target.value);\r\n   }\r\n  onPasswordChange=(event)=>\r\n  {\r\n   this.setState({pass:event.target.value});\r\n  }\r\n\r\n   validateInfo=  async ()=>\r\n   {\r\n\r\n   try{\r\n   let res=await fetch('https://floating-ravine-14006.herokuapp.com/signin', {\r\n  method: 'post', // or 'PUT'\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify({\r\n  email:this.state.email,\r\n  pass:this.state.pass\r\n  }),\r\n})\r\n  if(res.status===200)\r\n  {\r\n res= await res.json()\r\n  this.props.setUser(res[0].name,res[0].entries,res[0].id);\r\n  this.props.onLocationChange(\"home\",true);\r\n}\r\n}\r\ncatch(Err)\r\n{\r\n  console.log(Err);\r\n}\r\n}\r\n\r\n   \r\n  // {\r\n     // /* await*/ fetch(\"http://localhost:3000/signup\",{\r\n     //    method:\"POST\",\r\n     //    headers:{\"Content-Type\":\"application/json\"},\r\n     //    body:JSON.stringify({\r\n     //     email:this.state.email,\r\n     //     pass:this.state.pass\r\n     //    })\r\n     //    )\r\n\r\n\r\n  // }\r\n\r\n\r\n\r\n //      }).then(res=>res.json()).then((data)=>\r\n //                 {\r\n //                   v=data;\r\n //              }\r\n\r\n\r\n // )\r\n\r\n //    let found=false;\r\n //     console.log(\"i haved authenticated\")\r\n //      Object.keys(v).forEach(user=>\r\n //      {\r\n //            if(user.pass===this.state.pass && user.email===this.state.email)\r\n //            {\r\n //              found=true;\r\n //              this.props.onLocationChange(\"home\",true);\r\n             \r\n //            }\r\n\r\n //      })\r\n //      if(!found)\r\n //      {\r\n\r\n //        this.props.onLocationChange(\"home\",false);\r\n //      }\r\n\r\n\r\n\r\n //      // console.log(Object.entries(v))\r\n //      // console.log(Object.values(v))\r\n    \r\n // //  }\r\n\r\n   onRegisterClick=()=>\r\n   {\r\n    this.props.onLocationChange(\"Register\",true);\r\n   }\r\n\r\n    \r\n  render()\r\n  {\r\n  return(\r\n     <main className=\"pa4 black-80 \">\r\n  <div className=\"measure center\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0 \">\r\n      <legend className=\"f4 fw6 ph0 mh0 center\">Sign In</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email\">Email</label>\r\n        <input    onChange={this.onEmailChange}   className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email\"  id=\"email\"/>\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input   onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n      </div>\r\n      <div  >\r\n   <div className=\"center\">\r\n      <input     onClick={this.validateInfo}   className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n    </div>\r\n    <div className=\"lh-copy mt3 center\">\r\n      <a href=\"#0\"   onClick={this.onRegisterClick} className=\"f6 link dim black db\">Register</a>\r\n    </div>\r\n    </div>\r\n    </fieldset>\r\n    \r\n  </div>\r\n</main>\r\n\r\n\r\n  \t);\r\n\r\n\r\n}\r\n}\r\nexport default Signin;\r\n\r\n","import React from 'react';\r\nimport './ImageLinkform.css'\r\n\r\n\r\n\r\nconst  ImageLinkForm=({im,boxy})=>//alternate {im}//same as in props as they are immutable\r\n{\r\n\r\n   return(\r\n   \t<div className='center ma'>     \r\n        <div className='absolute'>  \r\n          <img     id='myImg' alt='' height='auto'   width='500px' src={im}/>{/*im*/}\r\n          <div className='bounding-box'  style={{bottom:boxy.bottomRow,top:boxy.topRow,left:boxy.leftCol,right:boxy.rightCol} }> </div>\r\n        </div>\r\n     </div>\r\n   \t);\r\n\r\n} \r\nexport default ImageLinkForm;\r\n\r\n\r\n","import Navigation from './Navigation';\r\nimport React from 'react';\r\nimport Logo from './Logo';\r\nimport ImageInsert from './ImageInsert';\r\nimport './App.css';\r\nimport Rank from './Rank';\r\nimport Register from './Register';\r\nimport './App.css';\r\nimport  Signin from './Signin';\r\nimport ImageLinkForm from './ImageLinkForm';\r\nimport Particles from 'react-particles-js';\r\nconst party={\r\n   particles:{\r\n   \tline_linked:{\r\n     shadow:{\r\n     enable:true,\r\n     color:\"#3CA9D1\",\r\n     blur:5\r\n     }\r\n     }\r\n \r\n   }\r\n\r\n}\r\n\r\nclass App extends React.Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\tinput:'',\r\n\t\timage:'',\r\n     box:{},\r\n     location:'Signin',\r\n     user:{\r\n     name:'',\r\n     rank:'',\r\n     id:''\r\n\r\n     }\r\n\t\t}\r\n\r\n\t}\r\n\r\n  // componentDidMount()\r\n  // {  fetch(\"http://localhost:3000/\"\r\n  //      // {\r\n  //      //  method:\"POST\",\r\n  //      //  headers:{\r\n  //      //      \"Content-Type\":\"application\\json\"\r\n  //      //  },\r\n  //      //  body:JSON.stringify(data)\r\n  //      // }\r\n  //     ).then(res=>res.json()).then(console.log)\r\n\r\n\r\n  // }\r\n\r\n   setUser= (name,rank,id)=>\r\n   {\r\n//    console.log(name,\"namw\")\r\n// console.log(rank)\r\n  //this.setState({user:{name:name}},()=>console.log(this.state.user.name));\r\nthis.setState({user:{rank:rank,\r\n                     name:name ,\r\n                     id:id }});\r\n// console.log(this.state.user.name)\r\n// console.log(this.state.user.rank)\r\n\r\n   }\r\n\r\n   onLocationChange=(requiredPage,b)=>\r\n   {\r\n    if(!b)\r\n    {\r\n    this.setState({input:''});\r\n    this.setState({image:''});\r\n    this.setState({box:{}}); \r\n  }\r\n\r\n\r\n    this.setState({location:requiredPage})\r\n   }\r\n\r\n   onInputChange=(event)=>\r\n   {\r\n   this.setState({input:event.target.value,image:event.target.value});\r\n\r\n\r\n   }\r\n\r\n\r\n\r\n   onButtonClick=  (event)=>\r\n   {\r\n   // this.setState({image:this.state.input});\r\n    console.log(this.state.image)\r\n    fetch('https://floating-ravine-14006.herokuapp.com/clarifai',{\r\n      method:'POST',\r\n      headers:{'Content-Type':'application/json'},\r\n      body:JSON.stringify({\r\n\r\n      input:this.state.image\r\n\r\n      })\r\n    }).then(response=>response.json())\r\n    .then(response=>\r\n    {\r\n      console.log(response)\r\n      if(response.status.description==='Ok')\r\n       fetch(`https://floating-ravine-14006.herokuapp.com/image`,{method:'PUT',\r\n         headers:{'Content-Type':'application/json'},\r\n         body:JSON.stringify({\r\n          id:this.state.user.id\r\n         })\r\n\r\n      }).then(res=>res.json()).then(data=>this.setState({user:{...this.state.user,rank:data}}))//(this.state.user.name,data,this.state.user.id))\r\n     //=>this.setUser(res[0].name,res[0].entries,res[0].id))\r\n     console.log(this.state.user);\r\n      this.getBox(response)\r\n    }\r\n      ).catch(Err=>console.log(\"incorect image url\"))\r\n     \r\n \r\n}\r\n\r\n  getBox=(response)=>\r\n  {\r\n     let values=(response.outputs[0].data.regions[0].region_info.bounding_box);\r\n      let imageData=document.getElementById('myImg');\r\n      let height=Number(imageData.height);\r\n     let width=Number(imageData.width);\r\nconsole.log(height,\"  \",width);\r\nconst box={\r\n    leftCol:values.left_col*width,\r\n    topRow : values.top_row*height,\r\n  rightCol:width-(values.right_col*width),\r\nbottomRow:height-(values.bottom_row*height),\r\n\r\n}\r\n console.log(box.rightCol);\r\n\r\nthis.setState({box});\r\n\r\n  }\r\n\r\n  render()\r\n  {\r\n   return(\r\n   \t<div >\r\n       <Particles className=\"tp\"\r\n         params={party}//dont kow what the hell  are params   \r\n       />\r\n    \r\n      { this.state.location===\"Signin\" ? \r\n      <div>\r\n     \r\n       <Signin setUser={this.setUser}  onLocationChange={this.onLocationChange} />\r\n       </div> \r\n      :\r\n      <div>    \r\n       <div>\r\n       {\r\n        this.state.location==='Register' ?\r\n       <Register  setUser={this.setUser} onLocationChange={this.onLocationChange}/>\r\n       :\r\n       <div>\r\n       <Navigation onLC={this.onLocationChange}/>\r\n       <Logo/>\r\n       <Rank   user={this.state.user}    />\r\n       <ImageInsert onInputChange={this.onInputChange} onButtonClick={this.onButtonClick}  />\r\n       <ImageLinkForm im={this.state.image}  boxy={this.state.box}/>\r\n       </div>\r\n     }\r\n       </div>\r\n       </div>\r\n     }\r\n     </div>\r\n   \t);\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n// const isLocalhost = Boolean(\n//   window.location.hostname === 'localhost' ||\n//     // [::1] is the IPv6 localhost address.\n//     window.location.hostname === '[::1]' ||\n//     // 127.0.0.0/8 are considered localhost for IPv4.\n//     window.location.hostname.match(\n//       /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n//     )\n// );\n\n// export function register(config) {\n//   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n//     // The URL constructor is available in all browsers that support SW.\n//     const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n//     if (publicUrl.origin !== window.location.origin) {\n//       // Our service worker won't work if PUBLIC_URL is on a different origin\n//       // from what our page is served on. This might happen if a CDN is used to\n//       // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n//       return;\n//     }\n\n//     window.addEventListener('load', () => {\n//       const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n//       if (isLocalhost) {\n//         // This is running on localhost. Let's check if a service worker still exists or not.\n//         checkValidServiceWorker(swUrl, config);\n\n//         // Add some additional logging to localhost, pointing developers to the\n//         // service worker/PWA documentation.\n//         navigator.serviceWorker.ready.then(() => {\n//           console.log(\n//             'This web app is being served cache-first by a service ' +\n//               'worker. To learn more, visit https://bit.ly/CRA-PWA'\n//           );\n//         });\n//       } else {\n//         // Is not localhost. Just register service worker\n//         registerValidSW(swUrl, config);\n//       }\n//     });\n//   }\n// }\n\n// function registerValidSW(swUrl, config) {\n//   navigator.serviceWorker\n//     .register(swUrl)\n//     .then(registration => {\n//       registration.onupdatefound = () => {\n//         const installingWorker = registration.installing;\n//         if (installingWorker == null) {\n//           return;\n//         }\n//         installingWorker.onstatechange = () => {\n//           if (installingWorker.state === 'installed') {\n//             if (navigator.serviceWorker.controller) {\n//               // At this point, the updated precached content has been fetched,\n//               // but the previous service worker will still serve the older\n//               // content until all client tabs are closed.\n//               console.log(\n//                 'New content is available and will be used when all ' +\n//                   'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n//               );\n\n//               // Execute callback\n//               if (config && config.onUpdate) {\n//                 config.onUpdate(registration);\n//               }\n//             } else {\n//               // At this point, everything has been precached.\n//               // It's the perfect time to display a\n//               // \"Content is cached for offline use.\" message.\n//               console.log('Content is cached for offline use.');\n\n//               // Execute callback\n//               if (config && config.onSuccess) {\n//                 config.onSuccess(registration);\n//               }\n//             }\n//           }\n//         };\n//       };\n//     })\n//     .catch(error => {\n//       console.error('Error during service worker registration:', error);\n//     });\n// }\n\n// function checkValidServiceWorker(swUrl, config) {\n//   // Check if the service worker can be found. If it can't reload the page.\n//   fetch(swUrl, {\n//     headers: { 'Service-Worker': 'script' },\n//   })\n//     .then(response => {\n//       // Ensure service worker exists, and that we really are getting a JS file.\n//       const contentType = response.headers.get('content-type');\n//       if (\n//         response.status === 404 ||\n//         (contentType != null && contentType.indexOf('javascript') === -1)\n//       ) {\n//         // No service worker found. Probably a different app. Reload the page.\n//         navigator.serviceWorker.ready.then(registration => {\n//           registration.unregister().then(() => {\n//             window.location.reload();\n//           });\n//         });\n//       } else {\n//         // Service worker found. Proceed as normal.\n//         registerValidSW(swUrl, config);\n//       }\n//     })\n//     .catch(() => {\n//       console.log(\n//         'No internet connection found. App is running in offline mode.'\n//       );\n//     });\n// }\n\n// export function unregister() {\n//   if ('serviceWorker' in navigator) {\n//     navigator.serviceWorker.ready\n//       .then(registration => {\n//         registration.unregister();\n//       })\n//       .catch(error => {\n//         console.error(error.message);\n//       });\n//   }\n// }\n\n\n\n\n\n\n\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport registerServiceWorker from './serviceWorker';\n\n \n   \n  ReactDOM.render(<React.StrictMode> <App /></React.StrictMode>, document.getElementById('root'));\n\n \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\nregisterServiceWorker();\n"],"sourceRoot":""}